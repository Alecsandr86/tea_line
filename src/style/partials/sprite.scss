/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$basket-ico-name: 'basket-ico';
$basket-ico-x: 44px;
$basket-ico-y: 210px;
$basket-ico-offset-x: -44px;
$basket-ico-offset-y: -210px;
$basket-ico-width: 28px;
$basket-ico-height: 29px;
$basket-ico-total-width: 418px;
$basket-ico-total-height: 243px;
$basket-ico-image: '../images/sprite.png';
$basket-ico: (44px, 210px, -44px, -210px, 28px, 29px, 418px, 243px, '../images/sprite.png', 'basket-ico', );
$icon-hover-name: 'icon-hover';
$icon-hover-x: 0px;
$icon-hover-y: 0px;
$icon-hover-offset-x: 0px;
$icon-hover-offset-y: 0px;
$icon-hover-width: 209px;
$icon-hover-height: 210px;
$icon-hover-total-width: 418px;
$icon-hover-total-height: 243px;
$icon-hover-image: '../images/sprite.png';
$icon-hover: (0px, 0px, 0px, 0px, 209px, 210px, 418px, 243px, '../images/sprite.png', 'icon-hover', );
$icon-name: 'icon';
$icon-x: 209px;
$icon-y: 0px;
$icon-offset-x: -209px;
$icon-offset-y: 0px;
$icon-width: 209px;
$icon-height: 210px;
$icon-total-width: 418px;
$icon-total-height: 243px;
$icon-image: '../images/sprite.png';
$icon: (209px, 0px, -209px, 0px, 209px, 210px, 418px, 243px, '../images/sprite.png', 'icon', );
$serch-buttom-name: 'serch-buttom';
$serch-buttom-x: 0px;
$serch-buttom-y: 210px;
$serch-buttom-offset-x: 0px;
$serch-buttom-offset-y: -210px;
$serch-buttom-width: 44px;
$serch-buttom-height: 33px;
$serch-buttom-total-width: 418px;
$serch-buttom-total-height: 243px;
$serch-buttom-image: '../images/sprite.png';
$serch-buttom: (0px, 210px, 0px, -210px, 44px, 33px, 418px, 243px, '../images/sprite.png', 'serch-buttom', );
$spritesheet-width: 418px;
$spritesheet-height: 243px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($basket-ico, $icon-hover, $icon, $serch-buttom, );
$spritesheet: (418px, 243px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
